{"version":3,"sources":["webpack://template20/./scripts/common/components/controls/ErrorAlert.jsx","webpack://template20/./scripts/common/components/controls/ListItemLink.jsx","webpack://template20/./scripts/common/components/controls/ModuleTitle.jsx","webpack://template20/./scripts/common/components/controls/ModuleWrapper.jsx","webpack://template20/./scripts/common/theme/index.js","webpack://template20/./scripts/common/context/colorModeContext.jsx","webpack://template20/./scripts/common/hooks/useColorMode.js","webpack://template20/./scripts/common/hooks/useDataFetcher.js","webpack://template20/./scripts/common/components/layout/Header.jsx","webpack://template20/./scripts/common/components/layout/listItems.jsx","webpack://template20/./scripts/common/components/layout/Drawer.jsx","webpack://template20/./scripts/common/components/layout/index.jsx","webpack://template20/./scripts/modules/index.jsx"],"names":["ErrorAlert","message","Alert","variant","severity","AlertTitle","Typography","gutterBottom","propTypes","PropTypes","ListItemLink","icon","primary","to","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","useStyles","makeStyles","theme","root","marginBottom","spacing","ModuleTitle","name","classesOverride","classes","color","className","clsx","wrapper","display","alignItems","justifyContent","flexDirection","ModuleWrapper","children","themeDefault","palette","main","secondary","ColorModeContext","createContext","toggleColorMode","ColorModeProvider","useState","String","window","localStorage","getItem","mode","setMode","colorMode","prevMode","createTheme","useEffect","setItem","Provider","value","ThemeProvider","useContext","isMount","getMethod","params","data","setData","loading","setLoading","error","setError","getResource","result","console","log","execute","useCallback","toolbar","paddingRight","menuButton","marginRight","menuButtonHidden","title","flexGrow","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","Header","onDrawerOpen","useColorMode","useTheme","position","edge","onClick","Menu","InsertEmoticon","noWrap","Brightness4","Brightness7","Link","Home","mainListItems","BeachAccess","FormatListNumbered","HourglassEmpty","secondaryListItems","inset","Note","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","toolbarIcon","padding","mixins","Drawer","onDrawerClose","paper","ChevronLeft","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","setOpen","onDrawerChange","Container","maxWidth","About","lazy","Weather","Expense","TodoList","MoscowDistrictsQuiz","App","Helmet","CssBaseline","Suspense","fallback","element","path","rootNode","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"js/main.50734f3bb877f1a72a4b.bundle.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert, AlertTitle, Typography } from '@mui/material';\r\n\r\nconst ErrorAlert = ({ message }) => {\r\n  return (\r\n    <Alert variant=\"filled\" severity=\"error\">\r\n      <AlertTitle>Error</AlertTitle>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        {message}\r\n      </Typography>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nErrorAlert.propTypes = {\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default ErrorAlert;\r\n","import React, { forwardRef, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { ListItem, ListItemIcon, ListItemText } from '@mui/material';\r\n\r\nconst ListItemLink = ({ icon, primary, to }) => {\r\n  const renderLink = useMemo(\r\n    () =>\r\n      forwardRef((itemProps, ref) => <Link to={to} ref={ref} {...itemProps} />),\r\n    [to]\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n};\r\n\r\nListItemLink.propTypes = {\r\n  icon: PropTypes.element,\r\n  primary: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ListItemLink;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Typography } from '@mui/material';\r\n\r\nimport { makeStyles } from 'decorators';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst ModuleTitle = ({ name, classesOverride }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography\r\n      component=\"h1\"\r\n      variant=\"h3\"\r\n      color=\"primary\"\r\n      className={clsx(classes.root, classesOverride)}\r\n    >\r\n      {name}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nModuleTitle.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  classesOverride: PropTypes.object\r\n};\r\n\r\nexport default ModuleTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from 'decorators';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  wrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nexport const ModuleWrapper = ({ classesOverride, children }) => {\r\n  const classes = useStyles();\r\n  return <div className={clsx(classes.wrapper, classesOverride)}>{children}</div>;\r\n};\r\n\r\nModuleWrapper.propTypes = {\r\n  classesOverride: PropTypes.object,\r\n  children: PropTypes.node.isRequired\r\n};\r\n","export const themeDefault = {\r\n  palette: {\r\n    primary: {\r\n      main: '#000000'\r\n    },\r\n    secondary: {\r\n      main: '#ffffff'\r\n    }\r\n  }\r\n};\r\n","import React, { createContext, useEffect, useMemo, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ThemeProvider, createTheme } from 'components/providers';\r\nimport { themeDefault } from 'theme';\r\n\r\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\r\n\r\nexport const ColorModeProvider = ({ children }) => {\r\n  const [mode, setMode] = useState(\r\n    String(window.localStorage.getItem('colorMode') || 'dark')\r\n  );\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n      }\r\n    }),\r\n    []\r\n  );\r\n  const theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        ...themeDefault,\r\n        palette: { ...themeDefault.palette, mode }\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('colorMode', mode);\r\n  }, [mode]);\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n\r\nColorModeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default ColorModeContext;\r\n","import { useContext } from 'react';\r\n\r\nimport ColorModeContext from '../context/colorModeContext';\r\n\r\nconst useColorMode = () => {\r\n  const colorMode = useContext(ColorModeContext);\r\n  return colorMode;\r\n};\r\n\r\nexport default useColorMode;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nconst useDataFetcher = (isMount = true, getMethod, ...params) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  async function getResource() {\r\n    try {\r\n      setLoading(true);\r\n      const result = await getMethod(...params);\r\n      setData(result.data);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setLoading(false);\r\n    } finally {\r\n      console.log('f');\r\n    }\r\n  }\r\n\r\n  const execute = useCallback(() => {\r\n    return getResource();\r\n  }, [getResource]);\r\n\r\n  useEffect(() => {\r\n    if (isMount) {\r\n      execute();\r\n    }\r\n  }, [isMount]);\r\n\r\n  return { execute, data, loading, error };\r\n};\r\n\r\nexport default useDataFetcher;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { useColorMode } from 'hooks';\r\nimport { Link } from 'components/router';\r\nimport { styled, useTheme } from 'components/providers';\r\nimport {\r\n  IconButton,\r\n  AppBar as MuiAppBar,\r\n  Toolbar,\r\n  Typography\r\n} from 'components/controls';\r\nimport {\r\n  Brightness4Icon,\r\n  Brightness7Icon,\r\n  HomeIcon,\r\n  InsertEmoticonIcon,\r\n  MenuIcon\r\n} from 'components/icons';\r\nimport { makeStyles } from 'decorators';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  toolbar: {\r\n    paddingRight: 24\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none!important'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open'\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  })\r\n}));\r\n\r\nconst Header = ({ open, onDrawerOpen }) => {\r\n  const colorMode = useColorMode();\r\n\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar open={open} position=\"absolute\" color=\"primary\">\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={onDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <InsertEmoticonIcon />\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          TEMPLATE 20\r\n        </Typography>\r\n        <IconButton onClick={colorMode.toggleColorMode}>\r\n          {theme.palette.mode === 'light' ? (\r\n            <Brightness4Icon />\r\n          ) : (\r\n            <Brightness7Icon />\r\n          )}\r\n        </IconButton>\r\n        <IconButton component={Link} to=\"/\">\r\n          <HomeIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onDrawerOpen: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { HourglassEmpty, Note } from '@mui/icons-material';\r\n\r\nimport { List, ListItemLink, ListSubheader } from 'components/controls';\r\nimport { BeachAccessIcon, FormatListNumberedIcon } from 'components/icons';\r\n\r\nexport const mainListItems = (\r\n  <List>\r\n    <ListItemLink to=\"/weather\" primary=\"Weather\" icon={<BeachAccessIcon />} />\r\n    <ListItemLink\r\n      to=\"/todo\"\r\n      primary=\"Todo List\"\r\n      icon={<FormatListNumberedIcon />}\r\n    />\r\n    <ListItemLink\r\n      to=\"/expense\"\r\n      primary=\"My Expense\"\r\n      icon={<HourglassEmpty />}\r\n    />\r\n  </List>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <List>\r\n    <ListSubheader inset>Additional</ListSubheader>\r\n    <ListItemLink to=\"/123\" primary=\"Ideas\" icon={<Note />} />\r\n  </List>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from 'decorators';\r\nimport {\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  Drawer as MuiDrawer\r\n} from 'components/controls';\r\nimport { ChevronLeftIcon } from 'components/icons';\r\n\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  }\r\n}));\r\n\r\nconst Drawer = ({ open, onDrawerClose }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiDrawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\r\n      }}\r\n      open={open}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={onDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{mainListItems}</List>\r\n      <Divider />\r\n      <List>{secondaryListItems}</List>\r\n    </MuiDrawer>\r\n  );\r\n};\r\n\r\nDrawer.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onDrawerClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Drawer;\r\n","import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { Container } from '@mui/material';\r\n\r\nimport { makeStyles } from 'decorators';\r\n\r\nimport Header from './Header';\r\nimport Drawer from './Drawer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Layout = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const onDrawerChange = () => setOpen(!open);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header open={open} onDrawerOpen={onDrawerChange} />\r\n      <Drawer open={open} onDrawerClose={onDrawerChange} />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Outlet />\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { hydrate, render } from 'react-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { ColorModeProvider } from 'context/colorModeContext';\r\nimport Layout from 'components/layout';\r\nimport { CssBaseline } from 'components/providers';\r\nimport { BrowserRouter, Route, Routes } from 'components/router';\r\nimport { CircularProgress } from 'components/controls';\r\n\r\nconst About = lazy(() => import('./about'));\r\nconst Weather = lazy(() => import('./weather'));\r\nconst Expense = lazy(() => import('./expense'));\r\nconst TodoList = lazy(() => import('./todoList'));\r\nconst MoscowDistrictsQuiz = lazy(() => import('./moscowDistrictsQuiz'));\r\n\r\nconst App = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>TEMPLATE 20</title>\r\n    </Helmet>\r\n    <BrowserRouter>\r\n      <ColorModeProvider>\r\n        <CssBaseline>\r\n          <Suspense fallback={<CircularProgress />}>\r\n            <Routes>\r\n              <Route element={<Layout />}>\r\n                <Route path=\"/\" element={<About />} />\r\n                <Route path=\"/about\" element={<About />} />\r\n                <Route path=\"/weather\" element={<Weather />} />\r\n                <Route path=\"/expense\" element={<Expense />} />\r\n                <Route path=\"/todo\" element={<TodoList />} />\r\n                <Route path=\"/moscow-districts-quiz\" element={<MoscowDistrictsQuiz />} />\r\n                <Route path=\"*\" element={<About />} />\r\n              </Route>\r\n            </Routes>\r\n          </Suspense>\r\n        </CssBaseline>\r\n      </ColorModeProvider>\r\n    </BrowserRouter>\r\n  </>\r\n);\r\n\r\nconst rootNode = document.getElementById('root');\r\n\r\nif (rootNode.hasChildNodes()) {\r\n  hydrate(<App />, rootNode);\r\n} else {\r\n  render(<App />, rootNode);\r\n}\r\n"],"sourceRoot":""}