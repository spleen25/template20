{"version":3,"sources":["webpack://template20/./scripts/modules/todoList/NewItem.jsx","webpack://template20/./scripts/modules/todoList/options.js","webpack://template20/./scripts/modules/todoList/ToDoList.jsx","webpack://template20/./scripts/modules/todoList/index.jsx"],"names":["ref","createRef","NewItem","onEnter","onChange","useState","todo","setTodo","handleAddItem","current","focus","TextField","fullWidth","label","value","target","onKeyPress","key","InputProps","endAdornment","InputAdornment","position","IconButton","title","disabled","trim","onClick","AddCircle","propTypes","PropTypes","storage","localStorage","id","get","parse","v","getItem","ToDoList","filter","items","handleChange","item","index","findIndex","i","uid","optShowDeleted","getOption","optFilter","lowerCaseFilter","toLowerCase","filterItems","deleted","includes","List","complete","map","props","ToDoItem","useStyle","makeStyles","Hidden","visibility","Visible","edit","setEdit","classes","ListItem","button","ListItemIcon","Checkbox","checked","e","autoFocus","onBlur","newValue","ListItemText","primary","ListItemSecondaryAction","Delete","className","onMouseDown","Cancel","setItems","setFilter","useEffect","Promise","resolve","reject","JSON","err","then","response","setItem","stringify","console","log","length","time","Date","uuid","slice"],"mappings":"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","file":"js/739.184ec17ec940ee0dd543.bundle.js","sourcesContent":["import React, { createRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IconButton, InputAdornment, TextField } from '@mui/material';\r\nimport { AddCircle } from '@mui/icons-material';\r\n\r\nconst ref = createRef();\r\n\r\nconst NewItem = ({ onEnter = () => {}, onChange = () => {} }) => {\r\n  const [todo, setTodo] = useState('');\r\n\r\n  const handleAddItem = () => {\r\n    onEnter(todo);\r\n    setTodo('');\r\n    onChange('');\r\n    ref.current.focus();\r\n  };\r\n\r\n  const handleKeyPress = ({ key }) => {\r\n    if (key === 'Enter') {\r\n      handleAddItem();\r\n    }\r\n  };\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n    setTodo(value);\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      label=\"Add an item\"\r\n      ref={ref}\r\n      value={todo}\r\n      onChange={handleChange}\r\n      onKeyPress={handleKeyPress}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              title=\"Click to add\"\r\n              disabled={!todo.trim()}\r\n              onClick={handleAddItem}\r\n            >\r\n              <AddCircle />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nNewItem.propTypes = {\r\n  onEnter: PropTypes.func,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default NewItem;\r\n","const storage = localStorage;\r\n\r\nfunction id(key) {\r\n  return `opt-${key}`;\r\n}\r\n\r\nexport function set(key, value) {\r\n  storage.setItem(id(key), value);\r\n}\r\n\r\nexport function get(key, parse = (v) => v) {\r\n  return parse(storage.getItem(id(key)));\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {\r\n  Checkbox,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  TextField\r\n} from '@mui/material';\r\nimport { Cancel, Delete } from '@mui/icons-material';\r\n\r\nimport { get as getOption } from './options';\r\n\r\nexport default function ToDoList({\r\n  filter = '',\r\n  items = [],\r\n  onChange = () => {}\r\n}) {\r\n  // Handle item changed property\r\n  const handleChange = (item) => {\r\n    const index = items.findIndex((i) => i.uid === item.uid);\r\n    items[index] = item;\r\n    onChange(items);\r\n  };\r\n\r\n  const optShowDeleted = getOption('showDeleted', (v) => v === 'true');\r\n  const optFilter = getOption('filter', (v) => v === 'true');\r\n\r\n  // Apply filter on active items if filter option is active\r\n  const lowerCaseFilter = filter.toLowerCase();\r\n  const filterItems = items.filter(\r\n    ({ value, deleted }) =>\r\n      (!optFilter || !filter || value.includes(lowerCaseFilter)) &&\r\n      (optShowDeleted || !deleted)\r\n  );\r\n\r\n  return (\r\n    <List>\r\n      {filterItems\r\n        .filter(({ complete }) => !complete)\r\n        .map(({ uid, ...props }) => (\r\n          <ToDoItem\r\n            key={uid}\r\n            item={{ uid, ...props }}\r\n            onChange={handleChange}\r\n          />\r\n        ))}\r\n      {filterItems\r\n        .filter(({ complete }) => complete)\r\n        .map(({ uid, ...props }) => (\r\n          <ToDoItem\r\n            key={uid}\r\n            item={{ uid, ...props }}\r\n            onChange={handleChange}\r\n          />\r\n        ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nconst useStyle = makeStyles({\r\n  Hidden: {\r\n    visibility: 'hidden'\r\n  },\r\n  Visible: {\r\n    visibility: 'visible'\r\n  }\r\n});\r\n\r\nfunction ToDoItem({ onChange, item }) {\r\n  const { complete, deleted, value } = item;\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const classes = useStyle();\r\n\r\n  const handleToggle = (e) => {\r\n    onChange({ ...item, complete: !complete });\r\n  };\r\n\r\n  const handleChange = ({ target: { newValue } }) => {\r\n    onChange({ ...item, newValue });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    onChange({ ...item, deleted: true });\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    onChange({ ...item, deleted: false });\r\n  };\r\n\r\n  // TODO: add title if item is deleted\r\n  return (\r\n    <ListItem button onClick={() => setEdit(true)}>\r\n      <ListItemIcon>\r\n        <Checkbox\r\n          title=\"Click to toggle\"\r\n          checked={complete}\r\n          onClick={handleToggle}\r\n        />\r\n      </ListItemIcon>\r\n\r\n      {edit ? (\r\n        <TextField\r\n          autoFocus\r\n          fullWidth\r\n          value={value}\r\n          onBlur={() => setEdit(false)}\r\n          onChange={handleChange}\r\n        />\r\n      ) : (\r\n        <ListItemText primary={value} />\r\n      )}\r\n\r\n      {\r\n        // TODO: If deleted:\r\n        // action delete forever\r\n        // action restore\r\n      }\r\n      {deleted ? (\r\n        <ListItemSecondaryAction>\r\n          <Delete />\r\n        </ListItemSecondaryAction>\r\n      ) : (\r\n        <ListItemSecondaryAction\r\n          className={edit ? classes.Visible : classes.Hidden}\r\n        >\r\n          <IconButton onMouseDown={handleDelete} title=\"Click to delete\">\r\n            <Cancel />\r\n          </IconButton>\r\n          <IconButton onMouseDown={handleUndo} title=\"Click undo\">\r\n            <Cancel />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { v1 as uuid } from 'uuid';\r\n\r\nimport NewItem from './NewItem';\r\nimport ToDoList from './ToDoList';\r\nimport { get as getOption } from './options';\r\n\r\nconst TodoPage = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    new Promise((resolve, reject) => {\r\n      try {\r\n        resolve(JSON.parse(localStorage.getItem('items')) || []);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    })\r\n      .then((response) => response.filter(({ deleted }) => !deleted))\r\n      .then((response) => setItems(response));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    new Promise((resolve, reject) => {\r\n      try {\r\n        localStorage.setItem('items', JSON.stringify(items));\r\n        resolve();\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    }).then((response) => console.log(response));\r\n  }, [items, items.length]);\r\n\r\n  const onItemCreateClick = (value) => {\r\n    Promise.resolve({\r\n      value,\r\n      time: +new Date(),\r\n      complete: false,\r\n      uid: uuid(),\r\n      deleted: false\r\n    }).then((item) => setItems([...items, item]));\r\n  };\r\n\r\n  const handleFilter = (value) => setFilter(value);\r\n\r\n  const handleChangeItems = (item) => setItems(item.slice());\r\n\r\n  return (\r\n    <>\r\n      <NewItem onChange={handleFilter} onEnter={onItemCreateClick} />\r\n      <ToDoList\r\n        filter={getOption('filter', (v) => v === 'true') ? filter : ''}\r\n        items={items}\r\n        onChange={handleChangeItems}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoPage;\r\n"],"sourceRoot":""}